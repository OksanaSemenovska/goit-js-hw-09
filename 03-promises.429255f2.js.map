{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAM,CACZC,KAAKC,SAASC,cAAc,SAC5BC,WAAWF,SAASC,cAAc,yBAClCE,KAAKH,SAASC,cAAc,wBAC5BG,OAAOJ,SAASC,cAAc,0BAC9BI,OAAOL,SAASC,cAAc,WAG9BH,EAAIC,KAAKO,iBAAiB,UAyB1B,SAAkBC,GAChBT,EAAIO,OAAOG,UAAW,EAGpBD,EAAME,iBACN,IAA4DC,EAAnBH,EAAMI,cAAzCC,SAAYC,EAAKH,EAALG,MAAOV,EAAIO,EAAJP,KAAMC,EAAMM,EAANN,OAE1BU,EAAcC,OAAOF,EAAMG,OAC5BC,EAAaF,OAAOZ,EAAKa,OACzBE,EAAeH,OAAOX,EAAOY,OAK3BG,EAAWC,aAAY,WAmB3B,GAhDN,SAAuBC,EAAUR,GAC/B,IAAMS,EAAU,IAAIC,SAAQ,SAACC,EAAKC,GACVC,KAAKC,SAAW,GAEpCH,EAAI,CAAEI,SAAAP,EAAUR,UAEjBY,EAAI,CAAEG,SAAAP,EAAUR,S,GAGjBA,GAEF,OADEgB,QAAQC,IAAIR,GACPA,C,CAqBHS,CAAcC,EAAUlB,GACrBmB,MAAK,SAACC,GACLtC,EAAAuC,OAAOC,QAAQ,qBAA2CC,OAAtBH,EAAON,SAAS,QAAmBS,OAAbH,EAAOrB,MAAM,MAAIyB,E,IAE5EC,OAAM,SAACC,GACN5C,EAAAuC,OAAOM,QAAQ,oBAAuCJ,OAAnBG,EAAIZ,SAAS,QAAgBS,OAAVG,EAAI3B,MAAM,MAAIyB,E,IACnEI,SAAQ,WACT5C,EAAIC,KAAK4C,QACTd,QAAQC,IAAIhB,GACZe,QAAQC,IAAIb,GACZY,QAAQC,IAAIZ,E,IAMZc,IAAad,EAIf,OAHAc,EAAS,EACTlC,EAAIO,OAAOG,UAAW,OACtBoC,cAAczB,GAKda,GAAY,EACZlB,GAAeG,C,GACnBH,E,IAlEJ,IAAIkB,EAAW,EACTM,EAAS,CACbO,MAAO,QACPC,aAAc,OACZlB,SAAU,aACVmB,SAAU,OACVC,SAAS,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst ref = {\nform:document.querySelector('.form'),\nfirstDelay:document.querySelector('input[name = \"delay\"]'),\nstep:document.querySelector('input[name = \"step\"]'),\namount:document.querySelector('input[name = \"amount\"]'),\nbutton:document.querySelector('button'),\n\n}\nref.form.addEventListener('submit', onSubmit)\n\nlet position = 1;\nconst option = {\n  width: '550px', \n  borderRadius: '20px',\n    position: 'center-top',\n    distance: '25px',\n    fontSize:'25px'\n}\nfunction createPromise(position, delay) {\n  const promise = new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      res({ position, delay })\n    } else {\n     rej({ position, delay });\n    }\n    \n  },delay)\n    console.log(promise )\n  return promise\n\n}\n\nfunction onSubmit(event) {\n  ref.button.disabled = true\n \n\n    event.preventDefault();\n    const{elements: { delay, step, amount }}=event.currentTarget\n  \n    let  promiseDelay= Number(delay.value)\n    let promiseStep= Number(step.value)\n    let promiseAmount= Number(amount.value)\n  \n  \n\n   \n    const promiseId= setInterval(() => {\n  \n  \n      createPromise(position, promiseDelay)\n        .then((result) => {\n          Notify.success(`Fulfilled promise ${result.position} in ${result.delay}ms`,option)\n        })\n        .catch((err) => {\n          Notify.failure(`Rejected promise ${err.position} in ${err.delay}ms`,option )\n        }).finally(()=>{\n          ref.form.reset()\n          console.log(promiseDelay)\n          console.log(promiseStep)\n          console.log(promiseAmount)\n      \n        })\n         \n      \n     \n      if (position === promiseAmount) {\n        position=1\n        ref.button.disabled = false;\n        clearInterval(promiseId)\n        return \n       \n    \n        }\n        position += 1\n        promiseDelay+= promiseStep\n  },promiseDelay)\n    \n  \n  \n  }\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$ref","form","document","querySelector","firstDelay","step","amount","button","addEventListener","event","disabled","preventDefault","_elements","currentTarget","elements","delay","promiseDelay","Number","value","promiseStep","promiseAmount","promiseId","setInterval","position1","promise","Promise","res","rej","Math","random","position","console","log","$ce04d3a99e08e73b$var$createPromise","$ce04d3a99e08e73b$var$position","then","result","Notify","success","concat","$ce04d3a99e08e73b$var$option","catch","err","failure","finally","reset","clearInterval","width","borderRadius","distance","fontSize"],"version":3,"file":"03-promises.429255f2.js.map"}